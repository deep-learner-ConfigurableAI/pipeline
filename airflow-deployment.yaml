# Licensed to the Apache Software Foundation (ASF) under one
# or more contributor license agreements.  See the NOTICE file
# distributed with this work for additional information
# regarding copyright ownership.  The ASF licenses this file
# to you under the Apache License, Version 2.0 (the
# "License"); you may not use this file except in compliance
# with the License.  You may obtain a copy of the License at
#
#   http://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing,
# software distributed under the License is distributed on an
# "AS IS" BASIS, WITHOUT WARRANTIES OR CONDITIONS OF ANY
# KIND, either express or implied.  See the License for the
# specific language governing permissions and limitations
# under the License.
#

# Airflow configuration with PostgreSQL and Local Executor
name: airflow-pipeline
services:
  postgres:
    image: postgres:14
    container_name: airflow_postgres
    environment:
      - POSTGRES_USER=airflow
      - POSTGRES_PASSWORD=airflow
      - POSTGRES_DB=airflow
    ports:
      - "5432:5432"
    volumes:
      - postgres-data:/var/lib/postgresql/data
    healthcheck:
      test: ["CMD", "pg_isready", "-U", "airflow"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always

  redis:
    image: 'redis:latest'
    container_name: airflow_redis
    expose:
      - 6379
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 5s
      timeout: 5s
      retries: 5
    restart: always
    volumes:
      - redis-data:/data

  webserver:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow_webserver
    entrypoint: /opt/airflow/build/entrypoint.sh
    command: webserver
    ports:
      - "8070:8080"
    env_file:
      - .env
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
      - AIRFLOW__WEBSERVER__AUTHENTICATE=True
      - AIRFLOW__WEBSERVER__AUTH_BACKEND=airflow.auth.backends.password_auth
      - _AIRFLOW_WWW_USER_USERNAME=admin
      - _AIRFLOW__WWW_USER_PASSWORD=admin
      - PYTHONPATH=/opt/airflow:/opt/airflow/plugins
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./scripts:/opt/airflow/scripts
      - ./build:/opt/airflow/build
      - ./airflow.cfg:/opt/airflow/airflow.cfg
    healthcheck:
      test: ["CMD", "curl", "--fail", "http://localhost:8080/health"]
      interval: 10s
      timeout: 10s
      retries: 5
    restart: always
    depends_on:
      - postgres
      - redis
    extra_hosts:
      - "host.docker.internal:host-gateway"

  scheduler:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow_scheduler
    entrypoint: /opt/airflow/build/entrypoint.sh
    command: scheduler
    env_file:
      - .env
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./scripts:/opt/airflow/scripts
      - ./build:/opt/airflow/build
      - ./airflow.cfg:/opt/airflow/airflow.cfg
      
    restart: always
    depends_on:
      - webserver
      - postgres
    extra_hosts:
      - "host.docker.internal:host-gateway"

  triggerer:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow_triggerer
    entrypoint: /opt/airflow/build/entrypoint.sh
    command: triggerer
    env_file:
      - .env
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql://airflow:airflow@postgres:5432/airflow
      - AIRFLOW__CORE__EXECUTOR=LocalExecutor
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./scripts:/opt/airflow/scripts
      - ./build:/opt/airflow/build
      - ./airflow.cfg:/opt/airflow/airflow.cfg
    restart: always
    depends_on:
      - postgres
      - scheduler
    extra_hosts:
      - "host.docker.internal:host-gateway"

  init:
    build:
      context: .
      dockerfile: Dockerfile
    container_name: airflow_init
    entrypoint: /opt/airflow/build/entrypoint.sh
    command: version
    env_file:
      - .env
    environment:
      - AIRFLOW__DATABASE__SQL_ALCHEMY_CONN=postgresql://airflow:airflow@postgres:5432/airflow
    volumes:
      - ./dags:/opt/airflow/dags
      - ./logs:/opt/airflow/logs
      - ./plugins:/opt/airflow/plugins
      - ./scripts:/opt/airflow/scripts
      - ./build:/opt/airflow/build
      - ./airflow.cfg:/opt/airflow/airflow.cfg
    restart: "no"
    depends_on:
      - postgres
    extra_hosts:
      - "host.docker.internal:host-gateway"

volumes:
  postgres-data:
  redis-data:
  logs:
  dags:
  scripts:

networks:
  default:
    external: true
    name: mlops_local-network
